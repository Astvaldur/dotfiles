" This is my custom confifuration file
set runtimepath=~/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim81,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,~/.vim/after

" Normally we use vim-extensions. If you want true vi-compatibility
" remove change the following statements
set nocompatible	" Use Vim defaults instead of 100% vi compatibility
set backspace=indent,eol,start	" more powerful backspacing

" Now we set some defaults for the editor
set history=200		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set wildmenu		" display completion matches in a status line

" modelines have historically been a source of security/resource
" vulnerabilities -- disable by default, even when 'nocompatible' is set
set nomodeline

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
syntax on

let iterm_profile = $VIM_BACKGROUND
if iterm_profile == "dark"
        set background=dark
	colorscheme gruvbox
else
	colorscheme morning 
endif
" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
if has("autocmd")
  filetype plugin indent on
endif

if exists('+colorcolumn')
  set colorcolumn=80
else
  au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)

set ignorecase		" Do case insensitive matching
set smartcase		" Do smart case matching
set incsearch		" Incremental search
set mouse=a		" Enable mouse usage (all modes)
endif



set directory^=$HOME/.vim/tmp/

" Make click work with control enter
nmap <buffer> <Enter> <C-]>
"for just following the link
"nmap <buffer> <C-Enter> <C-w><C-]><C-w>T
""for following the help topic in a new split (often useful)


"""
" airline
" "
let g:airline_solarized_bg='dark'
let g:airline#extensions#whitespace#enabled = 0

""
" Tagbar
"
nmap <F8> :TagbarToggle<CR>

let mapleader = " "

" Toggle spell checking
map <silent> <F6> :set spell!<CR>

" Nerdtree
"
map <Leader>n :NERDTreeToggle<CR>

" My custom leaders mappings
nnoremap <Leader>b :buffers<CR>
nnoremap <Leader>b1 :buffer 1<CR>
nnoremap <Leader>b2 :buffer 2<CR>
nnoremap <Leader>b3 :buffer 3<CR>
nnoremap <Leader>b4 :buffer 4<CR>
nnoremap <Leader>b5 :buffer 5<CR>
nnoremap <Leader>b6 :buffer 6<CR>
nnoremap <Leader>b7 :buffer 7<CR>
nnoremap <Leader>b8 :buffer 8<CR>
nnoremap <Leader>b9 :buffer 9<CR>
nnoremap <Leader>l :ls<CR>
nnoremap <Leader><CR> :<C-]><CR>


set statusline+=%{gutentags#statusline()}


" Searching TODO make this better
set hlsearch

" higlhlight extra whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
if has("autocmd")
	autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
	autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
	autocmd InsertLeave * match ExtraWhitespace /\s\+$/
	autocmd BufWinLeave * call clearmatches()
endif


let g:clang_format#command = "clang-format-10"
"let g:clang_format#auto_format_on_insert_leave = 1
let g:clang_format#enable_fallback_style = 0
map <Leader>k :ClangFormat <Enter>
"Change the = to use clang"
map = <Plug>(operator-clang-format)


